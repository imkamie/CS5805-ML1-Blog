---
execute:
  echo: fenced
title: "Anomaly/outlier detection"
toc: true
toc-title: "Table of Contents"
title-block-banner: false
author: Kamila Nurkhametova
---

Anomaly and Outlier Detection play crucial roles in machine learning as they ensure that models accurately represent the overall dataset.

Anomalies are data points that deviate from the expected pattern or distribution of the rest of the data. Detecting anomalies is vital as they can reveal important information. For instance, in analyzing credit card transactions, anomaly detection can identify fraudulent activities by spotting unusual amounts or transactions with atypical businesses. This process can lead to the discovery of new features for model improvement or even the development of an entirely new model.

Outliers, on the other hand, are observations with a low probability of occurrence within the dataset, often distant from other data points. Outliers may result from human or experimental errors, and sometimes their cause is unknown. Detecting outliers is crucial because they can distort the model and impact the accuracy of future predictions.

One method employed for outlier detection is DBSCAN (Density-Based Spatial Clustering of Applications With Noise). In this method, a point is considered part of the clustering algorithm if it falls within a certain radius of a core point (which has a minimum number of points in its radius). If this condition is not met, DBSCAN marks the point as an outlier. The multishapes dataset will be utilized to illustrate this concept.

```{python}
# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler

# Load the Credit Card Fraud Detection dataset
url = "https://storage.googleapis.com/download.tensorflow.org/data/creditcard.csv"
df = pd.read_csv("creditcard.csv")

# Display the first few rows of the dataset
print(df.head())

# Select features (excluding time and Class columns)
features = df.columns[1:-1]

# Standardize the features
scaler = StandardScaler()
df[features] = scaler.fit_transform(df[features])

# Fit the Isolation Forest model
model = IsolationForest(contamination=0.001, random_state=42)
model.fit(df[features])

# Predict outliers
outlier_preds = model.predict(df[features])
outliers_mask = outlier_preds == -1  # -1 indicates an outlier

# Visualize the results
plt.scatter(df.loc[~outliers_mask, 'V1'], df.loc[~outliers_mask, 'V2'], color='blue', label='Normal')
plt.scatter(df.loc[outliers_mask, 'V1'], df.loc[outliers_mask, 'V2'], color='red', label='Outlier')
plt.title('Isolation Forest - Credit Card Fraud Detection')
plt.xlabel('V1')
plt.ylabel('V2')
plt.legend()
plt.show()


```